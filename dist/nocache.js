// Generated by CoffeeScript 1.8.0
var NoCache, Processor;

Processor = require('./lib/Processor');

NoCache = (function() {
  function NoCache(options) {
    this.options = options != null ? options : {
      sourceContext: '',
      outputContext: '',
      cdn: []
    };
    this.map = {};
  }

  NoCache.prototype.processMedia = function(files, pattern, cdn) {
    var processor;
    processor = Processor.getInstance('media');
    return processor.setFiles(files).setCdn(cdn || this.options.cdn).write(pattern, this.options).then((function(_this) {
      return function() {
        return _this.map = processor.getMap();
      };
    })(this));
  };

  NoCache.prototype.processCss = function(files, pattern, cdn) {
    var processor;
    processor = Processor.getInstance('css');
    return processor.setFiles(files).setMap(this.map).setCdn(cdn || this.options.cdn).write(pattern, this.options).then((function(_this) {
      return function() {
        return _this.map = processor.getMap();
      };
    })(this));
  };

  NoCache.prototype.processJs = function(files, pattern, cdn) {
    var processor;
    processor = Processor.getInstance('js');
    return processor.setFiles(files).setMap(this.map).setCdn(cdn || this.options.cdn).write(pattern, this.options).then((function(_this) {
      return function() {
        return _this.map = processor.getMap();
      };
    })(this));
  };

  NoCache.prototype.processTpl = function(files, pattern, cdn) {
    var processor;
    processor = Processor.getInstance('tpl');
    return processor.setFiles(files).setMap(this.map).setCdn(cdn || this.options.cdn).write(pattern, this.options).then((function(_this) {
      return function() {
        return _this.map = processor.getMap();
      };
    })(this));
  };

  return NoCache;

})();

module.exports = {
  NoCache: NoCache,
  Processor: Processor,
  utils: require('./lib/utils')
};
