// Generated by CoffeeScript 1.8.0
var MediaProcessor, Processor, Promise, fs, path, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Processor = require('./Processor');

Promise = require('bluebird');

fs = require('fs');

path = require('path');

_ = require('lodash');

MediaProcessor = (function(_super) {
  __extends(MediaProcessor, _super);

  function MediaProcessor() {
    MediaProcessor.__super__.constructor.apply(this, arguments);
    this.types = {};
  }

  MediaProcessor.prototype._readFile = function(file) {
    return Promise.promisify(fs.readFile)(file);
  };


  /**
   * 设置要处理的文件，记录处理过的文件类型
   */

  MediaProcessor.prototype.setFiles = function(files) {
    MediaProcessor.__super__.setFiles.call(this, files);
    _.each(this.files, (function(_this) {
      return function(file) {
        var ext;
        ext = path.extname(file);
        if (ext) {
          return _this.types[ext.substring(1)] = true;
        }
      };
    })(this));
    return this;
  };

  MediaProcessor.prototype.getTypes = function() {
    return _.keys(this.types);
  };

  return MediaProcessor;

})(Processor);

module.exports = MediaProcessor;
