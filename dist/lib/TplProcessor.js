// Generated by CoffeeScript 1.8.0
var Processor, TplProcessor, path, utils,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Processor = require('./Processor');

utils = require('./utils');

path = require('path');

TplProcessor = (function(_super) {
  __extends(TplProcessor, _super);

  function TplProcessor() {
    return TplProcessor.__super__.constructor.apply(this, arguments);
  }

  TplProcessor.prototype.process = function(content, sourceFile, outputFile, options) {
    content = this._replaceMedia(content, sourceFile, outputFile, options);
    content = this._replaceCss(content, sourceFile, outputFile, options);
    content = this._repalceJs(content, sourceFile, outputFile, options);
    return content;
  };

  TplProcessor.prototype._replaceMedia = function(content, sourceFile, outputFile, options) {
    return content.replace(/((?:src|href)=[\'\"]?)([^\'\"]+)([\'\"]?)/g, (function(_this) {
      return function(str, str1, src, str2) {
        return str1 + _this._replacePath(src, sourceFile, outputFile, options) + str2;
      };
    })(this));
  };

  TplProcessor.prototype._replaceCss = function(content, sourceFile, outputFile, options) {
    content = content.replace(/(href=[\'\"]?)([^\'\"]+\.css)([\'\"]?)/g, (function(_this) {
      return function(str, str1, href, str2) {
        return str1 + _this._replacePath(href, sourceFile, outputFile, options) + str2;
      };
    })(this));
    content = content.replace(/(<style)(?:\s+_xprocess=(?:[\'\"]?)true(?:[\'\"]?))([^>]*>)((?:.|\n)*?)(<\/style>)/g, (function(_this) {
      return function(str, str1, str2, style, str3) {
        var processor;
        processor = Processor.getInstance('css');
        style = processor.process(style, sourceFile, outputFile, options);
        return str1 + str2 + style + str3;
      };
    })(this));
    return content;
  };

  TplProcessor.prototype._repalceJs = function(content, sourceFile, outputFile, options) {
    return content.replace(/(<script)(?:\s+_xprocess=(?:[\'\"]?)true(?:[\'\"]?))([^>]*>)((?:.|\n)*?)(<\/script>)/g, (function(_this) {
      return function(str, str1, str2, script, str3) {
        var processor;
        processor = Processor.getInstance('js');
        script = processor.process(script, sourceFile, outputFile, options);
        return str1 + str2 + script + str3;
      };
    })(this));
  };

  TplProcessor.prototype._replacePath = function(value, sourceFile, outputFile, options) {
    var valueArray;
    if (value) {
      valueArray = value.split('?');
      value = valueArray[0];
      value = this._getNewUrl(value, path.dirname(sourceFile), path.dirname(outputFile), options);
    }
    valueArray[0] = value;
    return valueArray.join('?');
  };

  return TplProcessor;

})(Processor);

module.exports = TplProcessor;
