// Generated by CoffeeScript 1.8.0
var $, Processor, TplProcessor, utils,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Processor = require('./Processor');

$ = require('cheerio');

utils = require('./utils');

TplProcessor = (function(_super) {
  __extends(TplProcessor, _super);

  function TplProcessor() {
    return TplProcessor.__super__.constructor.apply(this, arguments);
  }

  TplProcessor.prototype.process = function(content) {
    $ = $.load(content);
    this._replaceMedia($);
    this._replaceCss($);
    this._repalceJs($);
    return $.html();
  };

  TplProcessor.prototype._replaceMedia = function($) {
    return $('img').each((function(_this) {
      return function(i, elem) {
        return _this._replacePath($(elem), 'src');
      };
    })(this));
  };

  TplProcessor.prototype._replaceCss = function($) {
    $('link[rel="stylesheet"]').each((function(_this) {
      return function(i, elem) {
        return _this._replacePath($(elem), 'href');
      };
    })(this));
    return $('style').each((function(_this) {
      return function(i, elem) {
        var $style, processor;
        $style = $(elem);
        if ($style.attr('_xprocess') === 'true') {
          processor = Processor.getInstance('css');
          $style.html(processor.process($style.html()));
          return $style.removeAttr('_xprocess');
        }
      };
    })(this));
  };

  TplProcessor.prototype._repalceJs = function($) {
    return $('script').each((function(_this) {
      return function(i, elem) {
        var $elem, processor;
        $elem = $(elem);
        if ($elem.attr('src')) {
          return _this._replacePath($elem, 'src');
        } else if ($elem.attr('_xprocess') === 'true') {
          processor = Processor.getInstance('js');
          $elem.html(processor.process($elem.html()));
          return $elem.removeAttr('_xprocess');
        }
      };
    })(this));
  };

  TplProcessor.prototype._replacePath = function(dom, prop) {
    var value;
    if (value = dom.attr(prop)) {
      value = value.split('?')[0];
      value = this._getNewUrl(value);
      return dom.attr(prop, value);
    }
  };

  return TplProcessor;

})(Processor);

module.exports = TplProcessor;
